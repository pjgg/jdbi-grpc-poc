/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package grpc.jdbi.example;

import com.github.dockerjava.api.model.PortBinding;
import grpc.jdbi.example.jdbi.HikariDataSourceStrategy;
import grpc.jdbi.example.jdbi.JdbiClient;
import grpc.jdbi.example.jdbi.JdbiDataSource;
import grpc.jdbi.example.stub.Orange;
import grpc.jdbi.example.toolset.SimpleServiceClient;
import io.grpc.Server;
import io.grpc.ServerBuilder;
import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.testcontainers.containers.PostgreSQLContainer;

import java.io.IOException;
import java.util.List;


class SimpleServiceTest {

    private final static int PORT = 8080;
    private static PostgreSQLContainer postgreSQLContainer;
    private static Server app;

    @BeforeAll
    static void beforeAll() throws IOException {
        postgreSQLContainer = new PostgreSQLContainer("postgres:15.3")
                .withDatabaseName("test")
                .withUsername("user")
                .withPassword("topsecret");

        postgreSQLContainer.setPortBindings(List.of("5432:5432")); //TODO allow random ports

        postgreSQLContainer
                .withInitScript("init.sql")
                .withExposedPorts(5432);

        postgreSQLContainer.start();

        app = ServerBuilder.forPort(PORT)
                .addService(new SimpleService(defaultJdbiClient()))
                .build();

        app.start();
    }

    @AfterAll
    static void afterAll(){
        postgreSQLContainer.stop();
        app.shutdownNow();
    }

    @Test
    public void singleTableTest() {
        SimpleServiceClient simpleCli = new SimpleServiceClient(PORT);
        String id = simpleCli.addOrange(Orange.newBuilder().setColor("orange").setWeight(50).build());
        Assertions.assertNotNull(id);
    }

    private static JdbiClient defaultJdbiClient() {
        JdbiDataSource dataSourceStrategy = new HikariDataSourceStrategy();
        return JdbiClient.getInstance(dataSourceStrategy);
    }
}
